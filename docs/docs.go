// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "获取用户列表",
                "parameters": [
                    {
                        "description": "查询用户参数",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UserListForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "用户认证/登录/注册"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "登录用户名",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/registry": {
            "post": {
                "tags": [
                    "用户认证/登录/注册"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "description": "注册参数",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.UserRegistry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.LoginForm": {
            "type": "object",
            "required": [
                "captcha",
                "captcha_id",
                "password",
                "username"
            ],
            "properties": {
                "captcha": {
                    "description": "手机号验证\nMobile string ` + "`" + `form:\"mobile\" json:\"mobile\" binding:\"required,mobile\"` + "`" + `",
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 5
                },
                "captcha_id": {
                    "description": "验证码ID",
                    "type": "string"
                },
                "password": {
                    "description": "密码  binding:\"required\"为必填字段,长度大于3小于20",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "forms.UserListForm": {
            "type": "object",
            "required": [
                "page",
                "pagesize"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pagesize": {
                    "type": "integer"
                }
            }
        },
        "forms.UserRegistry": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
